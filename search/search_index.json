{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Home","text":"<p>Updated: 2023-04-28</p> <p>Welcome to the repository of the Center for Health Data Science (HeaDS), University of Copenhagen.  This repository will host a website highlighting the tools and courses the HeaDS team produces. For the main webpage of the Center, visit the official website.</p> <p></p>"},{"location":"index.html#center-for-health-data-science-github-page","title":"Center for Health Data Science Github page","text":""},{"location":"index.html#acknowledgements","title":"Acknowledgements","text":"<p>Funding and other acknowledgements.</p>"},{"location":"index.html#collaborators","title":"Collaborators","text":"<ul> <li>Tugce Karaderi: Assistant Professor, Group Leader of the Karaderi Group at HeaDS.</li> <li>Jonas Andreas Sibbesen: Former Assistant Professor and Group Leader of the Sibbesen Group at HeaDS.</li> <li>Danish National Sandbox for Health Data Science: a collaborative project with team members spanning five Danish universities, providing support and advance health data science training and research in Denmark (and beyond).</li> </ul>"},{"location":"courses.html","title":"HeaDS courses","text":"<p>Updated: 2023-04-28</p> <p>Courses calendar</p> <p>Check the event calendar at our official webpage </p>"},{"location":"courses.html#center-for-health-data-science-courses","title":"Center for Health Data Science Courses","text":""},{"location":"courses.html#datalab-courses","title":"DataLab courses","text":"<p>Thilde Terkelsen</p> <p>  DataLab Scientist </p> <p>Diana Andrejeva</p> <p>  DataLab Scientist </p> <p>Henrike Zschach</p> <p>  DataLab Scientist </p> <p>HeaDS DataLab provides several courses on Data Analysis such as introductions to R and python, git and github and related topics.</p>"},{"location":"courses.html#introduction-to-machine-learning-in-biomedical-research","title":"Introduction to Machine Learning in Biomedical Research","text":"<p>Github link</p> <p>An introductory course on Machine Learning for Biomedical Research at the Faculty of Health Science by the Center for Health and Data Science.</p>"},{"location":"courses.html#from-excel-to-r","title":"From Excel to R","text":"<p>Github link</p> <p>The course From Excel to R is intended for users with no, or very limited, experience in the statistical programming language R. Participants will learn how to use R and R-studio to open and load in datafiles, how to manipulate data into different structures, and how to quickly visualize datasets within the R-environment. The course will mainly focus on the tidyverse/dplyr framework and ggplot2. The course provides participants with a set of fundamental R-skills, which they may utilize in the analysis of their clinical/biological datasets.</p>"},{"location":"courses.html#python-tsunami-introduction-to-programming-in-python","title":"Python Tsunami: Introduction to Programming in Python","text":"<p>Github link</p> <p>Course webpage</p> <p>The course Python Tsunami is an 3-day introductory course to programming in the language Python. It is intended for researchers at SUND who are interested in learning how to use Python but who do not have any prior experience yet.</p> <p>We will demonstrate how to run Python from Jupyter Notebooks hosted on google colab, a tool that is often used for data analysis. An overview of the fundamental Pythonic data structures will follow and participants will learn about containers, conditional statements and loops. Moreover, the course will introduce the Python library pandas that allows for efficient data manipulation. Lastly, we will give a first introduction to data visualization in Python.</p>"},{"location":"courses.html#git-and-github","title":"Git and Github","text":"<p>Github link</p> <p>This introductory workshop is intended for researchers at SUND who are interested in learning how to share their code (R, Python, or other) and reports (R Markdown or Jupyter Notebook) with group members or external collaborators as well as editing, improving, and maintaining scripts with multiple contributors. </p> <p>The one-day workshop will introduce you to the basic git language (pull, stage, commit, and push), using the command line as well as the graphical interface GitHub. Participants will learn about version control, branching, and resolving conflicts in git and, more generally, how to efficiently collaborate on this platform. The workshop will include a hands-on exercises in which participants can try out their newly acquired knowledge.</p> <p>The introductory workshop is free for all researchers at SUND, including PhD students, who have no (or only very little) experience in working with git and GitHub. There is also a smaller number of free course seats available to SCIENCE employees. </p>"},{"location":"courses.html#computerome-20-users","title":"Computerome 2.0 Users","text":"<p>Github link</p> <p>The introductory workshop is intended for new users of the Computerome 2.0 platform. Participants will get an introduction to the architecture of Computerome 2.0, we will go through several fundamental concepts, such as nodes (CPUs/GPUs), parallelized computation (multithreading), etc. and we will discuss what kind of projects the supercomputer is especially useful for.</p> <p>Next, we will go through the basics of logging in, the structure of directories and projects, finding and loading modules, and running jobs interactively with iqsub.</p> <p>In the afternoon participants will get acquainted with how to set up a script for large computations submitted with iqsub. Importantly, we will discuss the cost of storage, computational resources, and wall times, and how to optimize these.</p> <p>The one-day workshop is targeted at researchers with some computational background (e.g. basic command line skills) who need to work with large datasets (mapping or assembly of sequencing data) or perform heavy computations (neural networks, molecular dynamics simulations).</p>"},{"location":"courses.html#data-protection-and-gdpr-for-biomedical-researcher","title":"Data Protection and GDPR for Biomedical Researcher","text":"<p>The course is specifically developed for upper and middle-level researchers wishing to use Danish Health and Genome data. You will learn about the implications of data protection legislation throughout the research life cycle. The focus of the workshop is health and genomic data research (within the EU). Particularly secondary research on already existing data (registries, health records, genomic data from research, and clinical biobanks).</p> <p>The workshop is organized as a series of lectures presented by experts on specific topics and practical exercises on relevant cases.</p>"},{"location":"courses.html#just-bash-it","title":"Just Bash It","text":"<p>Github link</p> <p>Knowledge on how to use a terminal command line is an essential skill, not just for data scientists, but for any biomedical researcher who needs to work with large datasets, including registry data, clinical datasets and high-throughput biological data. In combination with the basics of bash, mastering the command line will allow you to wrangle large datasets and run command line softwares for data analysis, including those for sequence alignment, gene annotation, SNP &amp; CNV calling, web-scraping, protein structure analysis, and much much more.</p> <p>This workshop contains a basic tutorial on how to use the shell and command line to manage files and develop useful scripts.</p>"},{"location":"courses.html#nhds-sandbox-courses","title":"NHDS sandbox courses","text":"<p>Jennifer Bartel</p> <p>  Project Coordinator / Data Scientist </p> <p>Samuele Soraggi</p> <p>  Data Scientist </p> <p>J.A. Romero Herrera</p> <p>  Data Scientist </p> <p>Jacob Fredegaard Hansen</p> <p>  Data Scientist  </p> <p>Conor O'Hare</p> <p>  Student assistant  </p> <p>The Danish National Sandbox for Health Data Science is a collaborative project with team members spanning five Danish universities, providing support and advance health data science training and research in Denmark (and beyond). The Sandbox project also provides courses on \"omic\" related topics, such as proteomics, genomics and transcriptomics.</p> <p>See all courses here. </p>"},{"location":"courses.html#introduction-to-bulk-rnaseq-analysis","title":"Introduction to bulk RNAseq analysis","text":"<p>Github link</p> <p>Tutorial on how to approach RNAseq data, starting from your sequencing reads (fastq files). Thus, the workshop only briefly touches upon laboratory protocols, library preparation, and experimental design of RNA sequencing experiments, mainly for the purpose of outlining considerations in the downstream bioinformatic analysis.</p>"},{"location":"courses.html#introduction-to-single-cell-rnaseq-analysis","title":"Introduction to single cell RNAseq analysis","text":"<p>Github link</p> <p>This course is organized as the analysis project of a dataset with cells from human testis representing the spermatogenesis process. We will also make a comparative analysis against a dataset from a person affected by azoospermia (missing or faulty production of spermatozoa). You will learn to use the tools for integrating and analyzing multiple datasets in both python and R with the use of interactive coding on Rstudio or Jupyter Notebooks.</p>"},{"location":"courses.html#introduction-to-ngs-data","title":"Introduction to NGS data","text":"<p>Github link</p> <p>This course is based on the material developed for the NGS summer school at Aarhus University. The material is organized in four separated jupyter notebooks in both bash, python and R where you will benefit of an interactive coding setup.</p>"},{"location":"courses.html#proteomics-ucloud-app","title":"Proteomics UCloud app","text":"<p>Github link</p> <p>Discover the world of proteomics with the Clinical Proteomics module of the Sandbox, offering the Proteomics Sandbox app on UCloud - an accessible resource for biomedical students and non-computational researchers. With a user-friendly interface and a lightweight clone feature, the app is perfect for those without extensive coding knowledge, providing a stable platform for proteomics software tools. You can also learn to predict protein structures based on sequence data with the independent ColabFold workshop, available on UCloud. This hands-on experience offers insights into the exciting field of proteomics analysis and is accessible for all UCloud-users.</p>"},{"location":"empty.html","title":"General page","text":""},{"location":"empty.html#general-page","title":"General Page","text":"<p>Section Overview</p> <p>\ud83d\udd70 Time Estimation: X minutes  </p> <p>\ud83d\udcac Learning Objectives:      1. First item     2. Second item  </p> <p>This is a template to write course lessons. Write your introduction to the page here.</p>"},{"location":"empty.html#useful-functions","title":"Useful functions","text":"<p>You should continue to write your markdown document as normal. But here are some useful functions.  You can find more in the Reference guide listed on the tab above. Be sure to delete the guide  and the tips below when finished with them.</p>"},{"location":"empty.html#code","title":"Code","text":"<p>Text will be highlighted appropriately when you include language abbreviation:</p> <pre><code>import tensorflow as tf\n</code></pre>"},{"location":"empty.html#admonitions","title":"Admonitions","text":"<p>The admonitions used for course/section overview and requirements should be consistent, though you  can use any other admonitions freely.</p> <p>Examples (both drop-down and not):</p> <p>Quote</p> <p>Here is a quote</p> What is the smallest country in the world? <p>A: Vatican City</p>"},{"location":"empty.html#footnotes","title":"Footnotes","text":"<p>We can include footnotes like this one1.</p>"},{"location":"empty.html#latex","title":"LaTeX","text":"<p>You write an equation as normal:</p> \\[ \\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}} \\]"},{"location":"empty.html#images","title":"Images","text":"<p>Format is similar to links, but include an exclamation mark before: </p> <p></p> <p>You can link to a URL or to somewhere locally.</p> <ol> <li> <p>Remember to eat your vegetables.\u00a0\u21a9</p> </li> </ol>"},{"location":"jupyter_example.html","title":"Jupyter notebook example title","text":"<p>Ideally one would add a yaml metadata header to the like this:</p> <pre><code>---\ntitle: Jupyter notebook example\nsummary: A brief description of my document.\ndate: 2000-01-01\nhide:\n    - navigation\n---\n</code></pre> <p>The only way to add \"metadata\" to a jupyter notebook is to modify the notebook metadata itself. However, this is still not caught by mkdocs, so there is no way to add metadata to the html file. Mkdocs material also cannot fetch the hide options from the yaml menu, which is a pity.</p> In\u00a0[5]: Copied! <pre>import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndataset_url = ('https://raw.githubusercontent.com/m-mehdi/pandas_tutorials/main/weekly_stocks.csv')\ndf = pd.read_csv(dataset_url, parse_dates=['Date'], index_col='Date')\npd.set_option('display.max.columns', None)\nprint(df.head())\n</pre> import pandas as pd import numpy as np import matplotlib.pyplot as plt   dataset_url = ('https://raw.githubusercontent.com/m-mehdi/pandas_tutorials/main/weekly_stocks.csv') df = pd.read_csv(dataset_url, parse_dates=['Date'], index_col='Date') pd.set_option('display.max.columns', None) print(df.head()) <pre>                  MSFT          FB        AAPL\nDate                                          \n2021-05-24  249.679993  328.730011  124.610001\n2021-05-31  250.789993  330.350006  125.889999\n2021-06-07  257.890015  331.260010  127.349998\n2021-06-14  259.429993  329.660004  130.460007\n2021-06-21  265.019989  341.369995  133.110001\n</pre> In\u00a0[6]: Copied! <pre>df.plot(y='MSFT', figsize=(9,6))\n</pre> df.plot(y='MSFT', figsize=(9,6)) Out[6]: <pre>&lt;Axes: xlabel='Date'&gt;</pre>"},{"location":"jupyter_example.html#jupyter-notebook-example-title","title":"Jupyter notebook example title\u00b6","text":"<p>Title of the admonition</p> <p> \ud83d\udd70 Time Estimation: X minutes         \ud83d\udcac Learning Objectives:         \u20031. First item         \u20032. Second item </p> <p>Write your introduction to the page here.</p>"},{"location":"jupyter_example.html#writing-admonitions","title":"Writing admonitions\u00b6","text":"<p>You can write admonitions in html code. Unfortunately it has to be this way...</p> <p>You need to write as the class inside the <code>&lt;div&gt;</code> tag \"admonition {type}\", e.g. \"admonition note\" or \"admonition tip\". Then in the following <code>&lt;p&gt;</code> block, you should add the class \"admonition-title\", followed by the title of the admonition. In the next <code>&lt;p&gt;</code> block, you can add the content.</p> <p>Title of the admonition</p> <p> \ud83d\udd70 Time Estimation: X minutes         \ud83d\udcac Learning Objectives:         \u20031. First item         \u20032. Second item </p> <p>Here is an example of a dropdown admonition. You do not need to provide the class in this case since it is wrapped inside the <code>&lt;details&gt;</code> tag, but you need to provide a suitable admonition type in class (e.g., \"warning\" or \"note\"). The title of the admonition is inside the <code>&lt;summary&gt;</code> tag.</p> Title of drop-down <p>     Content     </p> <p>Inside the html</p> <p>Bold text You will need <code>&lt;strong&gt;</code> and <code>&lt;/strong&gt;</code> tags for bold text</p> <p>Italic text You will need the <code>&lt;i&gt;</code> and <code>&lt;/i&gt;</code> tags for italic text</p> <p>Tab You will need the tag <code>&amp;emsp;</code> to add a 4 space tab in html code</p>"},{"location":"jupyter_example.html#running-code","title":"Running code\u00b6","text":"<p>This is some example code</p>"},{"location":"keywords.html","title":"Keywords","text":"<p>Here's a lit of used keywords:</p>"},{"location":"news.html","title":"HeaDS news","text":"<p>Updated: 2023-03-28</p> <p>Put here news regarding HeaDS repos.</p>"},{"location":"news.html#center-for-health-data-science-tools","title":"Center for Health Data Science tools","text":""},{"location":"publications.html","title":"HeaDS publications","text":"<p>Updated: 2023-03-28</p> <p>HeaDS believes in the principles of open science and reproducibility. As part of our commitment to these values, we strive to make our publications as reproducible as possible. To achieve this, we make our research process transparent by showcasing the GitHub repositories that contain our code and data. We also document our research process to ensure that others can replicate our findings and build upon them. By doing so, we hope to contribute to the wider scientific community's efforts to promote openness and transparency in research.</p>"},{"location":"publications.html#center-for-health-data-science-publications","title":"Center for Health Data Science publications","text":""},{"location":"publications.html#krogh-group","title":"Krogh group","text":"<p>Anders Krogh</p> <p>  Head of HeaDS / Group Leader / Professor </p> <p>I\u00f1igo Prada Luengo</p> <p>  Postdoc </p> <p>Viktoria Schuster</p> <p>  PhD Student </p>"},{"location":"publications.html#the-deep-generative-decoder-using-map-estimates-of-representations","title":"The deep generative decoder: Using MAP estimates of representations","text":"<p>DGD is a package for probabilistic representation learning. It can be applied to various tasks. The implementation for Fashion-MNIST and single-cell expression counts can be found in branch paper.</p> <p>Overview</p> <ul> <li>Manuscript link: https://arxiv.org/abs/2110.06672v1</li> <li>Github link: https://github.com/Center-for-Health-Data-Science/dgd</li> <li>Creator: Viktoria Schuster</li> </ul>"},{"location":"publications.html#karaderi-group","title":"Karaderi group","text":"<p>Tugce Karaderi</p> <p>  Group Leader / Assistant Professor </p> <p>Chloe Pittman</p> <p>  PhD Student </p> <p>Yengo, L., Vedantam, S., Marouli, E. et al. A saturated map of common genetic variants associated with human height. Nature 610, 704-71 (2022). https://doi.org/10.1038/s41586-022-05275-y</p> <p>Collin CB, Gebhardt T, Golebiewski M, Karaderi T, Hillemanns M, Khan FM, Salehzadeh-Yazdi A, Kirschner M, Krobitsch S, EU-STANDS4PM consortium, Kuepfer L. Computational Models for Clinical Applications in Personalized Medicine-Guidelines and Recommendations for Data Integration and Model Validation. Journal of Personalized Medicine. 2022; 12(2):166. https://doi.org/10.3390/jpm12020166</p> <p>Barin Burc, Yoldascan Banu Elcin, Savaskan Fatma, Ozbalikci Goncagul, Karaderi Tugce, \u00c7akal H\u00fcseyin. Joint Investigation of 2-Month Post-diagnosis IgG Antibody Levels and Psychological Measures for Assessing Longer Term Multi-Faceted Recovery Among COVID-19 Cases in Northern Cyprus. Front. Public Health. Volume 8 - 2021. https://doi.org/10.3389/fpubh.2020.590096</p>"},{"location":"rmarkdown_example.html","title":"Rmarkdown example","text":""},{"location":"rmarkdown_example.html#rmarkdown-example","title":"Rmarkdown example","text":"<p>Section Overview</p> <p>\ud83d\udd70 Time Estimation: X minutes  </p> <p>\ud83d\udcac Learning Objectives:      1. First item     2. Second item  </p> <p>This is an example of how to make md pages from rmarkdown documents. The source code to generate this md document is in <code>develop/rmd/rmarkdown_example.Rmd</code>.</p> <p>First we need to write the document as usual. Try to use the admonitions as in previous examples.</p>"},{"location":"rmarkdown_example.html#writing-code","title":"Writing code","text":"<p>You can run code as usual in Rmarkdown. The chunk options can be very useful. By default, the code will not run unless explicity specified in the chunk (you can change this behaviour on the \"knitr\" chunk above).</p> <pre><code>library(tidyverse)\n</code></pre> <pre><code>ggplot(data = txhousing, aes(x = listings, y = sales)) +\ngeom_point()\n</code></pre> <p></p>"},{"location":"rmarkdown_example.html#adding-images","title":"Adding images","text":"<p>You can add images using the <code>knitr::include_graphics()</code> option. The images should be in the same folder, otherwise they will break in the step below:</p> <p></p>"},{"location":"rmarkdown_example.html#knitting-the-document-and-formatting-item","title":"Knitting the document and formatting item","text":"<p>To use this document in the webpage, you will have to knit it first as a github_document. This is already setup in the yaml menu above. The knitted files will be created in the <code>knit</code> folder. Unfortunately, knitting creates a couple of issues. First, we need to get rid of the knit options of the yaml file. Knitting will also create a header with the title, author and date on the newly created md document. Lastly, for some reason, knitting will change the normal quotes \"\" into cursive quotes \"\". This will completely mess up the admonitions, and mkdocs will not display them properly.</p> <p>In order to solve this issues, there is a small <code>modify_md.ipynb</code> file that will take all the created github_document (*.md) files and fix these issues.</p> <pre><code>from os import listdir\nimport re\nfiles = listdir(\"./knit/\")\nprint(files)\n</code></pre> <pre><code>for i in files:\nif i.endswith(\".md\"):\nwith open(\"./knit/\"+ i) as f:\ntext = f.read()\ntext = re.sub(\"\\nknit((.|\\n)*)\\n[0-9]{4}-[0-9]{2}-[0-9]{2}\\n\", \"\\n---\\n\" ,text)\ntext = re.sub(\"(\"|\")\",\"\\\"\",text)\nwith open(\"./knit/\"+ i, \"w\") as f:\nf.write(text)\n</code></pre> <p>You can then move the knitted documents (and the images if needed) to the <code>develop</code> folder.</p>"},{"location":"tools.html","title":"HeaDS tools","text":"<p>Updated: 2023-04-28</p> <p>In HeaDS, we understand the importance of documentation when it comes to sharing and disseminating scientific tools. We believe that providing clear and detailed documentation is crucial for ensuring that our tools are accessible and usable by other researchers. Our documentation includes everything from installation instructions to user guides and code examples. By making our documentation as comprehensive as possible, we hope to empower other researchers to use our tools in their own work and contribute to the broader scientific community's efforts to advance knowledge and discovery.</p>"},{"location":"tools.html#center-for-health-data-science-tools","title":"Center for Health Data Science tools","text":""},{"location":"tools.html#covid-19-dashboard","title":"COVID-19 Dashboard","text":"<p>Github link: https://github.com/tooche/covid19_dashboard</p> <p>Creator: Tugce Karaderi</p> <p>R shiny dashboard that shows developments of the COVID-19 pandemic.</p>"},{"location":"rmd/modify_md.html","title":"Modify md","text":"In\u00a0[33]: Copied! <pre>import os\nimport shutil\nimport re\n</pre> import os import shutil import re In\u00a0[35]: Copied! <pre>source_folder = \"./knit/\"\nimages_folder = \"./images/\"\ndestination_folder = \"../\"\nfiles = os.listdir(source_folder)\n\nprint(files)\n</pre> source_folder = \"./knit/\" images_folder = \"./images/\" destination_folder = \"../\" files = os.listdir(source_folder)  print(files) <pre>['rmarkdown_example.md']\n</pre> In\u00a0[36]: Copied! <pre>for i in files:\n    if i.endswith(\".md\"):\n        with open(source_folder + i) as f:\n            print(\"Processing:\", i, \"\\n\")\n            text = f.read()\n            text = re.sub(\"\\nknit((.|\\n)*)\\n[0-9]{4}-[0-9]{2}-[0-9]{2}\\n\", \"\\n---\\n\" ,text)\n            text = re.sub(\"(\u201d|\u201c)\",\"\\\"\",text)\n        with open(source_folder + i, \"w\") as f:\n            f.write(text)\n</pre> for i in files:     if i.endswith(\".md\"):         with open(source_folder + i) as f:             print(\"Processing:\", i, \"\\n\")             text = f.read()             text = re.sub(\"\\nknit((.|\\n)*)\\n[0-9]{4}-[0-9]{2}-[0-9]{2}\\n\", \"\\n---\\n\" ,text)             text = re.sub(\"(\u201d|\u201c)\",\"\\\"\",text)         with open(source_folder + i, \"w\") as f:             f.write(text) <pre>Processing: rmarkdown_example.md \n\n</pre> In\u00a0[37]: Copied! <pre>for file_name in os.listdir(source_folder):\n    # construct full file path\n    source = source_folder + file_name\n    destination = destination_folder + file_name\n    shutil.move(source, destination)\n    print('Moved:', file_name)\n</pre> for file_name in os.listdir(source_folder):     # construct full file path     source = source_folder + file_name     destination = destination_folder + file_name     shutil.move(source, destination)     print('Moved:', file_name) <pre>Moved: rmarkdown_example.md\n</pre> In\u00a0[39]: Copied! <pre>def copy_directory(src_dir, dest_dir):\n    if not os.path.exists(dest_dir):\n        os.makedirs(dest_dir)\n    for item in os.listdir(src_dir):\n        src_path = os.path.join(src_dir, item)\n        dest_path = os.path.join(dest_dir, item)\n        if os.path.isdir(src_path):\n            copy_directory(src_path, dest_path)\n        else:\n            shutil.copy2(src_path, dest_path)\n\ncopy_directory(images_folder, destination_folder+\"images/\")\n</pre>  def copy_directory(src_dir, dest_dir):     if not os.path.exists(dest_dir):         os.makedirs(dest_dir)     for item in os.listdir(src_dir):         src_path = os.path.join(src_dir, item)         dest_path = os.path.join(dest_dir, item)         if os.path.isdir(src_path):             copy_directory(src_path, dest_path)         else:             shutil.copy2(src_path, dest_path)  copy_directory(images_folder, destination_folder+\"images/\")"},{"location":"rmd/knit/rmarkdown_example.html","title":"Rmarkdown example","text":""},{"location":"rmd/knit/rmarkdown_example.html#rmarkdown-example","title":"Rmarkdown example","text":"<p>2000-01-01</p>"},{"location":"rmd/knit/rmarkdown_example.html#rmarkdown-example_1","title":"Rmarkdown example","text":"<p>!!! note \u201cSection Overview\u201d</p> <pre><code>&amp;#128368; **Time Estimation:** X minutes\n\n&amp;#128172; **Learning Objectives:**    \n    1. First item  \n    2. Second item\n</code></pre> <p>This is an example of how to make md pages from rmarkdown documents. The source code to generate this md document is in <code>develop/rmd/rmarkdown_example.Rmd</code>.</p> <p>First we need to write the document as usual. Try to use the admonitions as in previous examples.</p>"},{"location":"rmd/knit/rmarkdown_example.html#writing-code","title":"Writing code","text":"<p>You can run code as usual in Rmarkdown. The chunk options can be very useful. By default, the code will not run unless explicity specified in the chunk (you can change this behaviour on the \u201cknitr\u201d chunk above).</p> <pre><code>library(tidyverse)\n</code></pre> <pre><code>ggplot(data = txhousing, aes(x = sales, y = listings)) +\ngeom_point()\n</code></pre> <p></p>"},{"location":"rmd/knit/rmarkdown_example.html#adding-images","title":"Adding images","text":"<p>You can add images using the <code>knitr::include_graphics()</code> option. The images should be in the same folder, otherwise they will break in the step below:</p> <p></p>"},{"location":"rmd/knit/rmarkdown_example.html#knitting-the-document-and-formatting-item","title":"Knitting the document and formatting item","text":"<p>To use this document in the webpage, you will have to knit it first as a github_document. This is already setup in the yaml menu above. The knitted files will be created in the <code>knit</code> folder. Unfortunately, knitting creates a couple of issues. First, we need to get rid of the knit options of the yaml file. Knitting will also create a header with the title, author and date on the newly created md document. Lastly, for some reason, knitting will change the normal quotes \u201c\u201d into cursive quotes \u201c\u201d. This will completely mess up the admonitions, and mkdocs will not display them properly.</p> <p>In order to solve this issues, there is a small <code>modify_md.ipynb</code> file that will take all the created github_document (*.md) files and fix these issues.</p> <pre><code>from os import listdir\nimport re\nfiles = listdir(\"./knit/\")\nprint(files)\n</code></pre> <pre><code>for i in files:\nif i.endswith(\".md\"):\nwith open(\"./knit/\"+ i) as f:\ntext = f.read()\ntext = re.sub(\"\\nknit((.|\\n)*)\\n[0-9]{4}-[0-9]{2}-[0-9]{2}\\n\", \"\\n---\\n\" ,text)\ntext = re.sub(\"(\u201d|\u201c)\",\"\\\"\",text)\nwith open(\"./knit/\"+ i, \"w\") as f:\nf.write(text)\n</code></pre> <p>You can then move the knitted documents (and the images if needed) to the <code>develop</code> folder.</p>"},{"location":"keywords.html","title":"Keywords","text":"<p>Here's a lit of used keywords:</p>"}]}